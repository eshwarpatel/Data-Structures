#include <stdio.h>
#include <stdlib.h>

struct Node {
    int key;
    struct Node *left;
    struct Node *right;
};

struct Node *newNode(int key) {
    struct Node *node = (struct Node *)malloc(sizeof(struct Node));
    node->key = key;
    node->left = NULL;
    node->right = NULL;
    return node;
}

void inorderTraversal(struct Node *root, int *count, int k, int *result) {
    if (root == NULL)
        return;

    inorderTraversal(root->left, count, k, result);
    (*count)++;
    if (*count == k) {
        *result = root->key;
        return;
    }
    inorderTraversal(root->right, count, k, result);
}

int kthSmallest(struct Node *root, int k) {
    int count = 0;
    int result = -1;
    inorderTraversal(root, &count, k, &result);
    return result;
}

int main() {
	printf("name : S.ESHWAR\n");
	printf("regno : 192210478\n");
    struct Node *root = NULL;

    root = newNode(3);
    root->left = newNode(1);
    root->right = newNode(4);
    root->left->right = newNode(2);

    int k = 2;
    int kthMin = kthSmallest(root, k);

    printf("The %dth smallest element in the BST is: %d\n", k, kthMin);

    return 0;
}
